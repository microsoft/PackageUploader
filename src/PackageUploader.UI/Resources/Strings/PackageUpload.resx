<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AditionalDetailsText" xml:space="preserve">
    <value>Additional details</value>
  </data>
  <data name="BranchNotFoundErrMsgPartOne" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="BranchNotFoundErrMsgPartTwo" xml:space="preserve">
    <value>not found</value>
  </data>
  <data name="BrowsePackagePathHelpText" xml:space="preserve">
    <value>Browse to package file</value>
  </data>
  <data name="BuildIdMismatchSubValErrMsg" xml:space="preserve">
    <value>BuildId mismatch in the Submission Validator log file</value>
  </data>
  <data name="CancelButtonHelpText" xml:space="preserve">
    <value>Cancel the operation</value>
  </data>
  <data name="CancelContentText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConfirmLocationSubtitleText" xml:space="preserve">
    <value>Confirm the location of the package</value>
  </data>
  <data name="DestinationTitleText" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="DirectoryNotFoundErrMsg" xml:space="preserve">
    <value>Directory not found</value>
  </data>
  <data name="ErrorExtractingInfoErrMsg" xml:space="preserve">
    <value>Error extracting package information</value>
  </data>
  <data name="ErrorGettingMarketGroupsErrMsg" xml:space="preserve">
    <value>Error getting market groups</value>
  </data>
  <data name="ErrorGettingProdInfo" xml:space="preserve">
    <value>Error getting product information</value>
  </data>
  <data name="ErrorProcessingPackageErrMsg" xml:space="preserve">
    <value>Error processing package</value>
  </data>
  <data name="ErrorSelectingFileErrMsg" xml:space="preserve">
    <value>Error selecting file</value>
  </data>
  <data name="ErrUploadPackageErrMsg" xml:space="preserve">
    <value>Error uploading package</value>
  </data>
  <data name="ExpectedText" xml:space="preserve">
    <value>Expected</value>
  </data>
  <data name="FamilyTitleText" xml:space="preserve">
    <value>Family</value>
  </data>
  <data name="FileNameTitleText" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="FoundText" xml:space="preserve">
    <value>Found</value>
  </data>
  <data name="InvalidFilePathErrMsg" xml:space="preserve">
    <value>Invalid file path.</value>
  </data>
  <data name="MarketTitleText" xml:space="preserve">
    <value>Market</value>
  </data>
  <data name="NoBranchesFoundErrMsg" xml:space="preserve">
    <value>No Branches found for this product</value>
  </data>
  <data name="NoProdInfoTitleText" xml:space="preserve">
    <value>No Product Information</value>
  </data>
  <data name="NullBranchFlightErrTitleText" xml:space="preserve">
    <value>Null Branch/Flight</value>
  </data>
  <data name="PackageHasNoBigIdConfigureMsftGameCfgErrMsg" xml:space="preserve">
    <value>Package has no StoreId/BigId. Configure your StoreId in the MicrosoftGame.config file before building your package or manually enter it in additional details below.</value>
  </data>
  <data name="PackageLocationTitleText" xml:space="preserve">
    <value>Package location</value>
  </data>
  <data name="PackagePathHelpText" xml:space="preserve">
    <value>Path to package file</value>
  </data>
  <data name="PackagePathText" xml:space="preserve">
    <value>Package path</value>
  </data>
  <data name="ProductInfoNotAvailableErrMsg" xml:space="preserve">
    <value>Product information not available. Please enter a valid BigId and try again.</value>
  </data>
  <data name="ProductNameText" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="ProductWithBigIdNotFoundConfigHereErrMsgPart1" xml:space="preserve">
    <value>Product with BigID</value>
  </data>
  <data name="ProductWithBigIdNotFoundConfigHereErrMsgPart2" xml:space="preserve">
    <value>not found. Configure your product at https://partner.microsoft.com/</value>
  </data>
  <data name="RequiredText" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="SelectDestinationText" xml:space="preserve">
    <value>Select a destination and market for the package upload.</value>
  </data>
  <data name="SelectEnterPackagePathText" xml:space="preserve">
    <value>Select or enter the package path</value>
  </data>
  <data name="SelectPackageFileText" xml:space="preserve">
    <value>Select a Package File</value>
  </data>
  <data name="SizeTitleText" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="StoreIdTitleText" xml:space="preserve">
    <value>Store ID</value>
  </data>
  <data name="SubValLogNotFoundErrMsg" xml:space="preserve">
    <value>Submission Validator log not found</value>
  </data>
  <data name="UploadButtonContentText" xml:space="preserve">
    <value>Upload Package</value>
  </data>
  <data name="UploadButtonHelpText" xml:space="preserve">
    <value>Start uploading the package</value>
  </data>
  <data name="UploadCancelledErrMsg" xml:space="preserve">
    <value>Upload cancelled.</value>
  </data>
  <data name="UploadPackageSubtitleText" xml:space="preserve">
    <value>Locate the package for uploading. The Xbox Package Tool will remember these paths for easier access in the future.</value>
  </data>
  <data name="UploadPackageTitleText" xml:space="preserve">
    <value>Upload a package</value>
  </data>
  <data name="UploadPreviewTitleText" xml:space="preserve">
    <value>Upload Preview</value>
  </data>
</root>