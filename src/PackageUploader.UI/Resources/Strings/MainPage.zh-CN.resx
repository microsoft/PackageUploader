<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>Xbox 游戏包管理器</value>
  </data>
  <data name="ChooseTenantButtonText" xml:space="preserve">
    <value>高级：列出可用租户</value>
  </data>
  <data name="CloseWindow" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="GitHubIssues" xml:space="preserve">
    <value>发送反馈...</value>
  </data>
  <data name="MakeAPackageBodyTextTwo" xml:space="preserve">
    <value>，然后上传。</value>
    <comment>The part of the string that comes after the hyperlink, if any.</comment>
  </data>
  <data name="MakeAPackageBodyURLText" xml:space="preserve">
    <value>（了解更多）</value>
  </data>
  <data name="MakeAPackageButtonText" xml:space="preserve">
    <value>创建包</value>
  </data>
  <data name="MakeAPackageTextBlockTitle" xml:space="preserve">
    <value>制作包</value>
  </data>
  <data name="MakePackageNotFoundErrorMsg" xml:space="preserve">
    <value>未找到 MakePkg.exe。请安装 GDK 以打包游戏内容。</value>
  </data>
  <data name="MaximizeWindow" xml:space="preserve">
    <value>最大化</value>
  </data>
  <data name="MinimizeWindow" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="SignInButtonContent" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="SignInLogginInText" xml:space="preserve">
    <value>我们正在尝试检索您的登录信息。如果几秒钟后浏览器页面未打开，请再次点击登录按钮重试。</value>
  </data>
  <data name="SignInPreLoginText" xml:space="preserve">
    <value>要无缝访问您的产品 ID 和发布目标，请登录您的 Microsoft 合作伙伴中心帐户。如果您只是创建没有配置的游戏包，此步骤是可选的，但对于计划上传包、检索产品 ID 或将其链接到配置文件的任何人都是必需的。</value>
  </data>
  <data name="SignInTextBlockTitle" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="SignOutUser" xml:space="preserve">
    <value>注销用户</value>
  </data>
  <data name="SubTitleTextBlock" xml:space="preserve">
    <value>包创建工具将您的游戏文件、资产和元数据打包成结构化的包，确保一致性和合规性，实现更快、更可靠的上传。</value>
  </data>
  <data name="TitleTextBlock" xml:space="preserve">
    <value>制作包并将其上传到 Microsoft 合作伙伴中心</value>
  </data>
  <data name="UploadPackageBlockBody" xml:space="preserve">
    <value>将您的游戏包上传到合作伙伴中心，以在 Xbox 上分发和管理它。准备好完整的包和 Microsoft 帐户即可开始。</value>
  </data>
  <data name="UploadPackageBlockButtonText" xml:space="preserve">
    <value>上传包</value>
  </data>
  <data name="UploadPackageBlockTitle" xml:space="preserve">
    <value>上传包（需要登录）</value>
  </data>
  <data name="VersionLabel" xml:space="preserve">
    <value>版本 {0}</value>
  </data>
  <data name="MakeAPackageBodyTextOne" xml:space="preserve">
    <value>游戏包能够加速上传过程，确保安装安全，并优化 Xbox 性能。只需添加构建文件和配置文件 </value>
    <comment>The part of the string that needs to come before the hyperlink (if any)</comment>
  </data>
</root>